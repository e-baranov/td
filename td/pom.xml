<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>epk.sam.uit</groupId>
  <artifactId>td</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>td</name>
  <description>data transfer test between different OS</description>
  
  	<properties>
		<!-- Если в исходниках содержится кириллица, задаем -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<slf4jVersion>1.7.12</slf4jVersion>
		<jdk.version>1.8</jdk.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- указывать версию обязательно, иначе warning [WARNING] 'build.plugins.plugin.version' 
					for org.apache.maven.plugins:maven-compiler-plugin is missing It is highly 
					recommended to fix these problems because they threaten the stability of 
					your build. [WARNING] For this reason, future Maven versions might no longer 
					support building such malformed projects. How to know what’s the Maven’s 
					plugin version? You can try the plugin at http://search.maven.org/ , or visit 
					the plugin website, for example – Maven compiler plugin official website. 
					http://maven.apache.org/plugins/maven-compiler-plugin/index.html -->
				<version>3.5.1</version>

				<configuration>
					<fork>true</fork>
					<source>1.8</source>
					<target>1.8</target>
					<!-- кодировка для обработки исходных файлов -->
					<encoding>UTF-8</encoding>
					<!-- Иначе при сборке на hudson падает компиляция с сообщением [ERROR] 
						No compiler is provided in this environment. Perhaps you are running on a 
						JRE rather than a JDK? ,а системное свойство java.home всегда указывает на 
						JRE, а не на JDK. Maven ищет для компиляции tools.jar, который есть только 
						в jdk_home/lib -->
					<executable>${env.JAVA_HOME}/bin/javac</executable>
					<compilerArguments>
						<verbose />
						<!-- path.separator можно глянуть в hudson/systemInfo -->
						<bootclasspath>${java.home}/lib/rt.jar${path.separator}${env.JAVA_HOME}/lib/tools.jar</bootclasspath>
						<!-- <bootclasspath>${env.JAVA_HOME}/lib/tools.jar</bootclasspath> -->
					</compilerArguments>
				</configuration>
			</plugin>
			<!-- and you run it with mvn clean compile assembly:single -Dmaven.test.skip=true
				 Compile goal 
				should be added before assembly:single or otherwise the code on your own 
				project is not included. -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>epk.sam.uit.td.Start</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>

			<!-- make jar executable -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<!-- на 3.0.2 вылетает...Manifest.write(java.io.PrintWriter) -  это баг -->
				<version>2.6</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>epk.sam.uit.td.Start</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- включить исходники *1.0-SNAPSHOT-sources.jar в каталог к построенному 
				артефакту We execute the source:jar goal from the source plugin during the 
				package phase. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- включить javadocs *1.0-SNAPSHOT-javadoc.jar в каталог к построенному 
				артефакту Same thing for the javadoc:jar goal from the javadoc plugin. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- для исполнения программы через командную строку mvn clean package exec:java -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.5.0</version>
				 <configuration>
			          <mainClass>epk.sam.uit.td.Start</mainClass>
			        </configuration>
			</plugin>


		</plugins>
	</build>


	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4jVersion}</version>
			<!-- 
			<scope>runtime</scope>
			 -->
		</dependency>
		<!-- Binding for System.out -->
		<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-simple</artifactId> 
			<version>${slf4jVersion}</version> <scope>runtime</scope> </dependency> -->
		<dependency>
			<!-- http://maven.apache.org/plugins/maven-surefire-plugin/examples/junit.html -->
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<version>1.7.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-scratchpad</artifactId>
			<version>3.7</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.1.7</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.7</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-access</artifactId>
			<version>1.1.7</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-examples</artifactId>
			<version>1.1.7</version>
		</dependency>

		<!-- для logback.groovy нужен джарник этого языка -->
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy</artifactId>
<!-- 			<version>2.3.7</version> -->
			<version>2.4.7</version>
		</dependency>

		<!-- http://code.mycila.com/xmltool http://mvnrepository.com/artifact/com.mycila/mycila-xmltool/4.4.ga -->

		<dependency>
			<groupId>com.mycila</groupId>
			<artifactId>mycila-xmltool</artifactId>
			<version>4.4.ga</version> <!-- Да, именно такая нумерация версий у этого артефакта -->
		</dependency>

		<!-- ещё xml инструмент, для сравнения, поддерживает xpath -->
		<dependency>
			<groupId>com.jcabi</groupId>
			<artifactId>jcabi-xml</artifactId>
			<version>0.17.2</version>
		</dependency>
		<!-- математическая библиотека -->
		<dependency>
			<groupId>colt</groupId>
			<artifactId>colt</artifactId>
			<version>1.2.0</version>
		</dependency>
		<!-- -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.6.1</version>
		</dependency>
		
		<!-- доступ к БД в функциональном стиле, как в LINQ 
		артефакт именно jinq-jpa, просто jinq падает при разрешении артефакта - там package type pom, а не jar, нужен именно jar
		-->
		
		<dependency>
			<groupId>org.jinq</groupId>
			<artifactId>jinq-jpa</artifactId>
			<version>1.8.11</version>
		</dependency>
		
		<!-- Apache Derby Database Engine And Embedded JDBC Driver -->
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.12.1.1</version>
		</dependency>
	    <dependency>
	      <groupId>org.eclipse.persistence</groupId>
	      <artifactId>eclipselink</artifactId>
	      <version>2.6.3</version>
	    </dependency>
<!-- аннотация параметров командной строки -->
		<dependency>
			<groupId>com.beust</groupId>
			<artifactId>jcommander</artifactId>
			<version>1.48</version>
		</dependency>
		<!-- XSLT процессор Saxon Home Edition -->
		<dependency>
			<groupId>net.sf.saxon</groupId>
			<!-- с заглавной буквы начинается, это необычно, но так -->
			<artifactId>Saxon-HE</artifactId>
			<version>9.7.0-7</version>
		</dependency>
	</dependencies>
  
</project>